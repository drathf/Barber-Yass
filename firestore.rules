rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Colección de usuarios
    match /usuarios/{userId} {
      allow read, write: if 
        // god tiene acceso a todo
        (request.auth.token.rol == 'god') ||
        // admin/barberyass pueden leer y escribir, pero no modificar usuarios god
        (request.auth.token.rol in ['admin', 'barberyass'] &&
          !(resource.data.rol == 'god' || request.resource.data.rol == 'god')) ||
        // un usuario normal solo puede leer y escribir su propio documento
        (request.auth != null && request.auth.uid == userId);
    }

    // Colección de reservas
    match /reservas/{reservaId} {
      allow read, write: if
        // god/admin/barberyass tienen acceso completo
        (request.auth.token.rol in ['god', 'admin', 'barberyass']) ||
        // user/vip solo pueden leer y escribir sus propias reservas
        (request.auth != null && request.auth.uid == request.resource.data.uid);
    }

    // Servicios
    match /servicios/{servicioId} {
      allow read: if request.auth != null; // todos los roles autenticados pueden leer
      allow write: if request.auth.token.rol in ['god', 'admin', 'barberyass'];
    }

    // Denegar todo lo demás
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
